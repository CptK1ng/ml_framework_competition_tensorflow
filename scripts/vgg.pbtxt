node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 9216
        }
      }
    }
  }
}
node {
  name: "labels"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377`\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "x"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input"
      }
    }
  }
}
node {
  name: "input"
  op: "ImageSummary"
  input: "input/tag"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "conv1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000B\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/truncated_normal/mul"
  op: "Mul"
  input: "conv1/truncated_normal/TruncatedNormal"
  input: "conv1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/truncated_normal"
  op: "Add"
  input: "conv1/truncated_normal/mul"
  input: "conv1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 66
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Assign"
  op: "Assign"
  input: "conv1/weights"
  input: "conv1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/read"
  op: "Identity"
  input: "conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 66
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 66
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases/Assign"
  op: "Assign"
  input: "conv1/biases"
  input: "conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases/read"
  op: "Identity"
  input: "conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/add"
  op: "Add"
  input: "conv1/Conv2D"
  input: "conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/Relu"
  op: "Relu"
  input: "conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/weights_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/weights_1"
      }
    }
  }
}
node {
  name: "conv1/weights_1"
  op: "HistogramSummary"
  input: "conv1/weights_1/tag"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/biases_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/biases_1"
      }
    }
  }
}
node {
  name: "conv1/biases_1"
  op: "HistogramSummary"
  input: "conv1/biases_1/tag"
  input: "conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/activations"
      }
    }
  }
}
node {
  name: "conv1/activations"
  op: "HistogramSummary"
  input: "conv1/activations/tag"
  input: "conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000B\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/truncated_normal_1/mul"
  op: "Mul"
  input: "conv1/truncated_normal_1/TruncatedNormal"
  input: "conv1/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/truncated_normal_1"
  op: "Add"
  input: "conv1/truncated_normal_1/mul"
  input: "conv1/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/weights_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 66
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights_2/Assign"
  op: "Assign"
  input: "conv1/weights_2"
  input: "conv1/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights_2/read"
  op: "Identity"
  input: "conv1/weights_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
}
node {
  name: "conv1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/biases_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases_2/Assign"
  op: "Assign"
  input: "conv1/biases_2"
  input: "conv1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases_2/read"
  op: "Identity"
  input: "conv1/biases_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
}
node {
  name: "conv1/Conv2D_1"
  op: "Conv2D"
  input: "conv1/Relu"
  input: "conv1/weights_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/add_1"
  op: "Add"
  input: "conv1/Conv2D_1"
  input: "conv1/biases_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/Relu_1"
  op: "Relu"
  input: "conv1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/weights2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/weights2"
      }
    }
  }
}
node {
  name: "conv1/weights2"
  op: "HistogramSummary"
  input: "conv1/weights2/tag"
  input: "conv1/weights_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/biases2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/biases2"
      }
    }
  }
}
node {
  name: "conv1/biases2"
  op: "HistogramSummary"
  input: "conv1/biases2/tag"
  input: "conv1/biases_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/activations2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/activations2"
      }
    }
  }
}
node {
  name: "conv1/activations2"
  op: "HistogramSummary"
  input: "conv1/activations2/tag"
  input: "conv1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/MaxPool"
  op: "MaxPool"
  input: "conv1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\202\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/truncated_normal/mul"
  op: "Mul"
  input: "conv2/truncated_normal/TruncatedNormal"
  input: "conv2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/truncated_normal"
  op: "Add"
  input: "conv2/truncated_normal/mul"
  input: "conv2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 130
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Assign"
  op: "Assign"
  input: "conv2/weights"
  input: "conv2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/read"
  op: "Identity"
  input: "conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 130
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 130
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases/Assign"
  op: "Assign"
  input: "conv2/biases"
  input: "conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases/read"
  op: "Identity"
  input: "conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
}
node {
  name: "conv2/Conv2D"
  op: "Conv2D"
  input: "conv1/MaxPool"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/add"
  op: "Add"
  input: "conv2/Conv2D"
  input: "conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/Relu"
  op: "Relu"
  input: "conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/weights_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/weights_1"
      }
    }
  }
}
node {
  name: "conv2/weights_1"
  op: "HistogramSummary"
  input: "conv2/weights_1/tag"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/biases_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/biases_1"
      }
    }
  }
}
node {
  name: "conv2/biases_1"
  op: "HistogramSummary"
  input: "conv2/biases_1/tag"
  input: "conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/activations"
      }
    }
  }
}
node {
  name: "conv2/activations"
  op: "HistogramSummary"
  input: "conv2/activations/tag"
  input: "conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\202\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/truncated_normal_1/mul"
  op: "Mul"
  input: "conv2/truncated_normal_1/TruncatedNormal"
  input: "conv2/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/truncated_normal_1"
  op: "Add"
  input: "conv2/truncated_normal_1/mul"
  input: "conv2/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/weights_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 130
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights_2/Assign"
  op: "Assign"
  input: "conv2/weights_2"
  input: "conv2/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights_2/read"
  op: "Identity"
  input: "conv2/weights_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
}
node {
  name: "conv2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/biases_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases_2/Assign"
  op: "Assign"
  input: "conv2/biases_2"
  input: "conv2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases_2/read"
  op: "Identity"
  input: "conv2/biases_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
}
node {
  name: "conv2/Conv2D_1"
  op: "Conv2D"
  input: "conv2/Relu"
  input: "conv2/weights_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/add_1"
  op: "Add"
  input: "conv2/Conv2D_1"
  input: "conv2/biases_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/Relu_1"
  op: "Relu"
  input: "conv2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/weights2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/weights2"
      }
    }
  }
}
node {
  name: "conv2/weights2"
  op: "HistogramSummary"
  input: "conv2/weights2/tag"
  input: "conv2/weights_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/biases2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/biases2"
      }
    }
  }
}
node {
  name: "conv2/biases2"
  op: "HistogramSummary"
  input: "conv2/biases2/tag"
  input: "conv2/biases_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/activations2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/activations2"
      }
    }
  }
}
node {
  name: "conv2/activations2"
  op: "HistogramSummary"
  input: "conv2/activations2/tag"
  input: "conv2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/MaxPool"
  op: "MaxPool"
  input: "conv2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv3/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\002\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv3/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/truncated_normal/mul"
  op: "Mul"
  input: "conv3/truncated_normal/TruncatedNormal"
  input: "conv3/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/truncated_normal"
  op: "Add"
  input: "conv3/truncated_normal/mul"
  input: "conv3/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 258
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights/Assign"
  op: "Assign"
  input: "conv3/weights"
  input: "conv3/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights/read"
  op: "Identity"
  input: "conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 258
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv3/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 258
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/biases/Assign"
  op: "Assign"
  input: "conv3/biases"
  input: "conv3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/biases/read"
  op: "Identity"
  input: "conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
}
node {
  name: "conv3/Conv2D"
  op: "Conv2D"
  input: "conv2/MaxPool"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/add"
  op: "Add"
  input: "conv3/Conv2D"
  input: "conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/Relu"
  op: "Relu"
  input: "conv3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/weights_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/weights_1"
      }
    }
  }
}
node {
  name: "conv3/weights_1"
  op: "HistogramSummary"
  input: "conv3/weights_1/tag"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/biases_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/biases_1"
      }
    }
  }
}
node {
  name: "conv3/biases_1"
  op: "HistogramSummary"
  input: "conv3/biases_1/tag"
  input: "conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/activations"
      }
    }
  }
}
node {
  name: "conv3/activations"
  op: "HistogramSummary"
  input: "conv3/activations/tag"
  input: "conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv3/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/truncated_normal_1/mul"
  op: "Mul"
  input: "conv3/truncated_normal_1/TruncatedNormal"
  input: "conv3/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/truncated_normal_1"
  op: "Add"
  input: "conv3/truncated_normal_1/mul"
  input: "conv3/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/weights_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 258
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights_2/Assign"
  op: "Assign"
  input: "conv3/weights_2"
  input: "conv3/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights_2/read"
  op: "Identity"
  input: "conv3/weights_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
}
node {
  name: "conv3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv3/biases_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/biases_2/Assign"
  op: "Assign"
  input: "conv3/biases_2"
  input: "conv3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/biases_2/read"
  op: "Identity"
  input: "conv3/biases_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
}
node {
  name: "conv3/Conv2D_1"
  op: "Conv2D"
  input: "conv3/Relu"
  input: "conv3/weights_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/add_1"
  op: "Add"
  input: "conv3/Conv2D_1"
  input: "conv3/biases_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/Relu_1"
  op: "Relu"
  input: "conv3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/weights2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/weights2"
      }
    }
  }
}
node {
  name: "conv3/weights2"
  op: "HistogramSummary"
  input: "conv3/weights2/tag"
  input: "conv3/weights_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/biases2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/biases2"
      }
    }
  }
}
node {
  name: "conv3/biases2"
  op: "HistogramSummary"
  input: "conv3/biases2/tag"
  input: "conv3/biases_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/activations2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/activations2"
      }
    }
  }
}
node {
  name: "conv3/activations2"
  op: "HistogramSummary"
  input: "conv3/activations2/tag"
  input: "conv3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/MaxPool"
  op: "MaxPool"
  input: "conv3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "flatten/Shape"
  op: "Shape"
  input: "conv3/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice"
  op: "StridedSlice"
  input: "flatten/Shape"
  input: "flatten/strided_slice/stack"
  input: "flatten/strided_slice/stack_1"
  input: "flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten/Reshape/shape"
  op: "Pack"
  input: "flatten/strided_slice"
  input: "flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten/Reshape"
  op: "Reshape"
  input: "conv3/MaxPool"
  input: "flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000Q\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fcl1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fcl1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fcl1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fcl1/truncated_normal/mul"
  op: "Mul"
  input: "fcl1/truncated_normal/TruncatedNormal"
  input: "fcl1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/truncated_normal"
  op: "Add"
  input: "fcl1/truncated_normal/mul"
  input: "fcl1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/Weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20736
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl1/Weights/Assign"
  op: "Assign"
  input: "fcl1/Weights"
  input: "fcl1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl1/Weights/read"
  op: "Identity"
  input: "fcl1/Weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
}
node {
  name: "fcl1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fcl1/Biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl1/Biases/Assign"
  op: "Assign"
  input: "fcl1/Biases"
  input: "fcl1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl1/Biases/read"
  op: "Identity"
  input: "fcl1/Biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
}
node {
  name: "fcl1/MatMul"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "fcl1/Weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fcl1/add"
  op: "Add"
  input: "fcl1/MatMul"
  input: "fcl1/Biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "fcl1/dropout/Shape"
  op: "Shape"
  input: "fcl1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fcl1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fcl1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fcl1/dropout/random_uniform/sub"
  op: "Sub"
  input: "fcl1/dropout/random_uniform/max"
  input: "fcl1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/random_uniform/mul"
  op: "Mul"
  input: "fcl1/dropout/random_uniform/RandomUniform"
  input: "fcl1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/random_uniform"
  op: "Add"
  input: "fcl1/dropout/random_uniform/mul"
  input: "fcl1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/add"
  op: "Add"
  input: "fcl1/dropout/keep_prob"
  input: "fcl1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/Floor"
  op: "Floor"
  input: "fcl1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/div"
  op: "RealDiv"
  input: "fcl1/add"
  input: "fcl1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout/mul"
  op: "Mul"
  input: "fcl1/dropout/div"
  input: "fcl1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/weights_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl1/weights_1"
      }
    }
  }
}
node {
  name: "fcl1/weights_1"
  op: "HistogramSummary"
  input: "fcl1/weights_1/tag"
  input: "fcl1/Weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/biases_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl1/biases_1"
      }
    }
  }
}
node {
  name: "fcl1/biases_1"
  op: "HistogramSummary"
  input: "fcl1/biases_1/tag"
  input: "fcl1/Biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl1/activations"
      }
    }
  }
}
node {
  name: "fcl1/activations"
  op: "HistogramSummary"
  input: "fcl1/activations/tag"
  input: "fcl1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl1/dropout_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl1/dropout_1"
      }
    }
  }
}
node {
  name: "fcl1/dropout_1"
  op: "HistogramSummary"
  input: "fcl1/dropout_1/tag"
  input: "fcl1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "fcl2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fcl2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fcl2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fcl2/truncated_normal/mul"
  op: "Mul"
  input: "fcl2/truncated_normal/TruncatedNormal"
  input: "fcl2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/truncated_normal"
  op: "Add"
  input: "fcl2/truncated_normal/mul"
  input: "fcl2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/Weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl2/Weights/Assign"
  op: "Assign"
  input: "fcl2/Weights"
  input: "fcl2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl2/Weights/read"
  op: "Identity"
  input: "fcl2/Weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
}
node {
  name: "fcl2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "fcl2/Biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl2/Biases/Assign"
  op: "Assign"
  input: "fcl2/Biases"
  input: "fcl2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl2/Biases/read"
  op: "Identity"
  input: "fcl2/Biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
}
node {
  name: "fcl2/MatMul"
  op: "MatMul"
  input: "fcl1/dropout/mul"
  input: "fcl2/Weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fcl2/add"
  op: "Add"
  input: "fcl2/MatMul"
  input: "fcl2/Biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "fcl2/dropout/Shape"
  op: "Shape"
  input: "fcl2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl2/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl2/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fcl2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fcl2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fcl2/dropout/random_uniform/sub"
  op: "Sub"
  input: "fcl2/dropout/random_uniform/max"
  input: "fcl2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/random_uniform/mul"
  op: "Mul"
  input: "fcl2/dropout/random_uniform/RandomUniform"
  input: "fcl2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/random_uniform"
  op: "Add"
  input: "fcl2/dropout/random_uniform/mul"
  input: "fcl2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/add"
  op: "Add"
  input: "fcl2/dropout/keep_prob"
  input: "fcl2/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/Floor"
  op: "Floor"
  input: "fcl2/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/div"
  op: "RealDiv"
  input: "fcl2/add"
  input: "fcl2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout/mul"
  op: "Mul"
  input: "fcl2/dropout/div"
  input: "fcl2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/weights_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl2/weights_1"
      }
    }
  }
}
node {
  name: "fcl2/weights_1"
  op: "HistogramSummary"
  input: "fcl2/weights_1/tag"
  input: "fcl2/Weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/biases_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl2/biases_1"
      }
    }
  }
}
node {
  name: "fcl2/biases_1"
  op: "HistogramSummary"
  input: "fcl2/biases_1/tag"
  input: "fcl2/Biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl2/activations"
      }
    }
  }
}
node {
  name: "fcl2/activations"
  op: "HistogramSummary"
  input: "fcl2/activations/tag"
  input: "fcl2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fcl2/dropout_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fcl2/dropout_1"
      }
    }
  }
}
node {
  name: "fcl2/dropout_1"
  op: "HistogramSummary"
  input: "fcl2/dropout_1/tag"
  input: "fcl2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "fcl2/dropout/mul"
  input: "labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss/mean_squared_error/ToFloat/x"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/Mul"
  op: "Mul"
  input: "loss/mean_squared_error/SquaredDifference"
  input: "loss/mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/Const"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/Sum"
  op: "Sum"
  input: "loss/mean_squared_error/Mul"
  input: "loss/mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/Equal/y"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/Equal"
  op: "Equal"
  input: "loss/mean_squared_error/ToFloat/x"
  input: "loss/mean_squared_error/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/zeros_like"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/ones_like/Shape"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/ones_like/Const"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/ones_like"
  op: "Fill"
  input: "loss/mean_squared_error/num_present/ones_like/Shape"
  input: "loss/mean_squared_error/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/Select"
  op: "Select"
  input: "loss/mean_squared_error/num_present/Equal"
  input: "loss/mean_squared_error/num_present/zeros_like"
  input: "loss/mean_squared_error/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/mean_squared_error/SquaredDifference"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/mean_squared_error/SquaredDifference"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  input: "loss/mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/broadcast_weights"
  op: "Mul"
  input: "loss/mean_squared_error/num_present/Select"
  input: "loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present/Const"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/num_present"
  op: "Sum"
  input: "loss/mean_squared_error/num_present/broadcast_weights"
  input: "loss/mean_squared_error/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mean_squared_error/Const_1"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/Sum_1"
  op: "Sum"
  input: "loss/mean_squared_error/Sum"
  input: "loss/mean_squared_error/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mean_squared_error/Greater/y"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/Greater"
  op: "Greater"
  input: "loss/mean_squared_error/num_present"
  input: "loss/mean_squared_error/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/Equal/y"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/Equal"
  op: "Equal"
  input: "loss/mean_squared_error/num_present"
  input: "loss/mean_squared_error/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/ones_like/Shape"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/ones_like/Const"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/ones_like"
  op: "Fill"
  input: "loss/mean_squared_error/ones_like/Shape"
  input: "loss/mean_squared_error/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/mean_squared_error/Select"
  op: "Select"
  input: "loss/mean_squared_error/Equal"
  input: "loss/mean_squared_error/ones_like"
  input: "loss/mean_squared_error/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/div"
  op: "RealDiv"
  input: "loss/mean_squared_error/Sum_1"
  input: "loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mean_squared_error/zeros_like"
  op: "Const"
  input: "^loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mean_squared_error/value"
  op: "Select"
  input: "loss/mean_squared_error/Greater"
  input: "loss/mean_squared_error/div"
  input: "loss/mean_squared_error/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/mean_squared_error/value"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mse/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/mse"
      }
    }
  }
}
node {
  name: "loss/mse"
  op: "ScalarSummary"
  input: "loss/mse/tags"
  input: "loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/loss/Mean_grad/Reshape"
  input: "train/gradients/loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/loss/Mean_grad/Tile"
  input: "train/gradients/loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/value_grad/Select"
  op: "Select"
  input: "loss/mean_squared_error/Greater"
  input: "train/gradients/loss/Mean_grad/truediv"
  input: "train/gradients/loss/mean_squared_error/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/value_grad/Select_1"
  op: "Select"
  input: "loss/mean_squared_error/Greater"
  input: "train/gradients/loss/mean_squared_error/value_grad/zeros_like"
  input: "train/gradients/loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/loss/mean_squared_error/value_grad/Select"
  input: "^train/gradients/loss/mean_squared_error/value_grad/Select_1"
}
node {
  name: "train/gradients/loss/mean_squared_error/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/value_grad/Select"
  input: "^train/gradients/loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/value_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/value_grad/Select_1"
  input: "^train/gradients/loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/value_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/loss/mean_squared_error/div_grad/Shape"
  input: "train/gradients/loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/loss/mean_squared_error/div_grad/RealDiv"
  input: "train/gradients/loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/div_grad/Sum"
  input: "train/gradients/loss/mean_squared_error/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Neg"
  op: "Neg"
  input: "loss/mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/loss/mean_squared_error/div_grad/Neg"
  input: "loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/loss/mean_squared_error/div_grad/RealDiv_1"
  input: "loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/mul"
  op: "Mul"
  input: "train/gradients/loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "train/gradients/loss/mean_squared_error/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/loss/mean_squared_error/div_grad/mul"
  input: "train/gradients/loss/mean_squared_error/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/div_grad/Sum_1"
  input: "train/gradients/loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/loss/mean_squared_error/div_grad/Reshape"
  input: "^train/gradients/loss/mean_squared_error/div_grad/Reshape_1"
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/div_grad/Reshape"
  input: "^train/gradients/loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/div_grad/Reshape_1"
  input: "^train/gradients/loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/div_grad/tuple/control_dependency"
  input: "train/gradients/loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/loss/mean_squared_error/Sum_1_grad/Reshape"
  input: "train/gradients/loss/mean_squared_error/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/Sum_1_grad/Tile"
  input: "train/gradients/loss/mean_squared_error/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "loss/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/loss/mean_squared_error/Sum_grad/Reshape"
  input: "train/gradients/loss/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "loss/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Shape"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/loss/mean_squared_error/Sum_grad/Tile"
  input: "loss/mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Mul"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Sum"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss/mean_squared_error/SquaredDifference"
  input: "train/gradients/loss/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Mul_1"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Sum_1"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train/gradients/loss/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train/gradients/loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/Reshape_1"
  input: "^train/gradients/loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "fcl2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Shape"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train/gradients/loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/scalar"
  input: "train/gradients/loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fcl2/dropout/mul"
  input: "labels"
  input: "^train/gradients/loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/mul"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Sum"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/loss/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^train/gradients/loss/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/loss/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Shape"
  op: "Shape"
  input: "fcl2/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "fcl2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fcl2/dropout/mul_grad/Shape"
  input: "train/gradients/fcl2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "fcl2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/fcl2/dropout/mul_grad/Mul"
  input: "train/gradients/fcl2/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl2/dropout/mul_grad/Sum"
  input: "train/gradients/fcl2/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "fcl2/dropout/div"
  input: "train/gradients/loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fcl2/dropout/mul_grad/Mul_1"
  input: "train/gradients/fcl2/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fcl2/dropout/mul_grad/Sum_1"
  input: "train/gradients/fcl2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl2/dropout/mul_grad/Reshape"
  input: "^train/gradients/fcl2/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl2/dropout/mul_grad/Reshape"
  input: "^train/gradients/fcl2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl2/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/fcl2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Shape"
  op: "Shape"
  input: "fcl2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fcl2/dropout/div_grad/Shape"
  input: "train/gradients/fcl2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/fcl2/dropout/mul_grad/tuple/control_dependency"
  input: "fcl2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/fcl2/dropout/div_grad/RealDiv"
  input: "train/gradients/fcl2/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl2/dropout/div_grad/Sum"
  input: "train/gradients/fcl2/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Neg"
  op: "Neg"
  input: "fcl2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/fcl2/dropout/div_grad/Neg"
  input: "fcl2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/fcl2/dropout/div_grad/RealDiv_1"
  input: "fcl2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/fcl2/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/fcl2/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fcl2/dropout/div_grad/mul"
  input: "train/gradients/fcl2/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fcl2/dropout/div_grad/Sum_1"
  input: "train/gradients/fcl2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl2/dropout/div_grad/Reshape"
  input: "^train/gradients/fcl2/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl2/dropout/div_grad/Reshape"
  input: "^train/gradients/fcl2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl2/dropout/div_grad/Reshape_1"
  input: "^train/gradients/fcl2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/Shape"
  op: "Shape"
  input: "fcl2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fcl2/add_grad/Shape"
  input: "train/gradients/fcl2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/fcl2/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/fcl2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl2/add_grad/Sum"
  input: "train/gradients/fcl2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fcl2/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/fcl2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fcl2/add_grad/Sum_1"
  input: "train/gradients/fcl2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl2/add_grad/Reshape"
  input: "^train/gradients/fcl2/add_grad/Reshape_1"
}
node {
  name: "train/gradients/fcl2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl2/add_grad/Reshape"
  input: "^train/gradients/fcl2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl2/add_grad/Reshape_1"
  input: "^train/gradients/fcl2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/fcl2/add_grad/tuple/control_dependency"
  input: "fcl2/Weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/fcl2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fcl1/dropout/mul"
  input: "train/gradients/fcl2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl2/MatMul_grad/MatMul"
  input: "^train/gradients/fcl2/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/fcl2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl2/MatMul_grad/MatMul"
  input: "^train/gradients/fcl2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/fcl2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl2/MatMul_grad/MatMul_1"
  input: "^train/gradients/fcl2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "fcl1/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "fcl1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fcl1/dropout/mul_grad/Shape"
  input: "train/gradients/fcl1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/fcl2/MatMul_grad/tuple/control_dependency"
  input: "fcl1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/fcl1/dropout/mul_grad/Mul"
  input: "train/gradients/fcl1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl1/dropout/mul_grad/Sum"
  input: "train/gradients/fcl1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "fcl1/dropout/div"
  input: "train/gradients/fcl2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fcl1/dropout/mul_grad/Mul_1"
  input: "train/gradients/fcl1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fcl1/dropout/mul_grad/Sum_1"
  input: "train/gradients/fcl1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl1/dropout/mul_grad/Reshape"
  input: "^train/gradients/fcl1/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl1/dropout/mul_grad/Reshape"
  input: "^train/gradients/fcl1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl1/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/fcl1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Shape"
  op: "Shape"
  input: "fcl1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fcl1/dropout/div_grad/Shape"
  input: "train/gradients/fcl1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/fcl1/dropout/mul_grad/tuple/control_dependency"
  input: "fcl1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/fcl1/dropout/div_grad/RealDiv"
  input: "train/gradients/fcl1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl1/dropout/div_grad/Sum"
  input: "train/gradients/fcl1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Neg"
  op: "Neg"
  input: "fcl1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/fcl1/dropout/div_grad/Neg"
  input: "fcl1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/fcl1/dropout/div_grad/RealDiv_1"
  input: "fcl1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/fcl1/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/fcl1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fcl1/dropout/div_grad/mul"
  input: "train/gradients/fcl1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fcl1/dropout/div_grad/Sum_1"
  input: "train/gradients/fcl1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl1/dropout/div_grad/Reshape"
  input: "^train/gradients/fcl1/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl1/dropout/div_grad/Reshape"
  input: "^train/gradients/fcl1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl1/dropout/div_grad/Reshape_1"
  input: "^train/gradients/fcl1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/Shape"
  op: "Shape"
  input: "fcl1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fcl1/add_grad/Shape"
  input: "train/gradients/fcl1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/fcl1/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/fcl1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl1/add_grad/Sum"
  input: "train/gradients/fcl1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fcl1/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/fcl1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fcl1/add_grad/Sum_1"
  input: "train/gradients/fcl1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl1/add_grad/Reshape"
  input: "^train/gradients/fcl1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/fcl1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl1/add_grad/Reshape"
  input: "^train/gradients/fcl1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl1/add_grad/Reshape_1"
  input: "^train/gradients/fcl1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/fcl1/add_grad/tuple/control_dependency"
  input: "fcl1/Weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/fcl1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "train/gradients/fcl1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fcl1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fcl1/MatMul_grad/MatMul"
  input: "^train/gradients/fcl1/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/fcl1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fcl1/MatMul_grad/MatMul"
  input: "^train/gradients/fcl1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/fcl1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fcl1/MatMul_grad/MatMul_1"
  input: "^train/gradients/fcl1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fcl1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "conv3/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fcl1/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv3/Relu_1"
  input: "conv3/MaxPool"
  input: "train/gradients/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv3/MaxPool_grad/MaxPoolGrad"
  input: "conv3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/Shape"
  op: "Shape"
  input: "conv3/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/add_1_grad/Shape"
  input: "train/gradients/conv3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/Relu_1_grad/ReluGrad"
  input: "train/gradients/conv3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/add_1_grad/Sum"
  input: "train/gradients/conv3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/Relu_1_grad/ReluGrad"
  input: "train/gradients/conv3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/add_1_grad/Sum_1"
  input: "train/gradients/conv3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/add_1_grad/Reshape"
  input: "^train/gradients/conv3/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/add_1_grad/Reshape"
  input: "^train/gradients/conv3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/add_1_grad/Reshape_1"
  input: "^train/gradients/conv3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "conv3/Relu"
  input: "conv3/weights_2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv3/Conv2D_1_grad/ShapeN"
  input: "conv3/weights_2/read"
  input: "train/gradients/conv3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv3/Relu"
  input: "train/gradients/conv3/Conv2D_1_grad/ShapeN:1"
  input: "train/gradients/conv3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv3/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv3/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv3/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv3/Conv2D_1_grad/tuple/control_dependency"
  input: "conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/Shape"
  op: "Shape"
  input: "conv3/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 258
      }
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/add_grad/Shape"
  input: "train/gradients/conv3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/Relu_grad/ReluGrad"
  input: "train/gradients/conv3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/add_grad/Sum"
  input: "train/gradients/conv3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/Relu_grad/ReluGrad"
  input: "train/gradients/conv3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/add_grad/Sum_1"
  input: "train/gradients/conv3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/add_grad/Reshape"
  input: "^train/gradients/conv3/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/add_grad/Reshape"
  input: "^train/gradients/conv3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/add_grad/Reshape_1"
  input: "^train/gradients/conv3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2/MaxPool"
  input: "conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv3/Conv2D_grad/ShapeN"
  input: "conv3/weights/read"
  input: "train/gradients/conv3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2/MaxPool"
  input: "train/gradients/conv3/Conv2D_grad/ShapeN:1"
  input: "train/gradients/conv3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2/Relu_1"
  input: "conv2/MaxPool"
  input: "train/gradients/conv3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv2/MaxPool_grad/MaxPoolGrad"
  input: "conv2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/Shape"
  op: "Shape"
  input: "conv2/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/add_1_grad/Shape"
  input: "train/gradients/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/Relu_1_grad/ReluGrad"
  input: "train/gradients/conv2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/add_1_grad/Sum"
  input: "train/gradients/conv2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/Relu_1_grad/ReluGrad"
  input: "train/gradients/conv2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/add_1_grad/Sum_1"
  input: "train/gradients/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/add_1_grad/Reshape"
  input: "^train/gradients/conv2/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/add_1_grad/Reshape"
  input: "^train/gradients/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/add_1_grad/Reshape_1"
  input: "^train/gradients/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "conv2/Relu"
  input: "conv2/weights_2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv2/Conv2D_1_grad/ShapeN"
  input: "conv2/weights_2/read"
  input: "train/gradients/conv2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2/Relu"
  input: "train/gradients/conv2/Conv2D_1_grad/ShapeN:1"
  input: "train/gradients/conv2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv2/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv2/Conv2D_1_grad/tuple/control_dependency"
  input: "conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/Shape"
  op: "Shape"
  input: "conv2/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 130
      }
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/add_grad/Shape"
  input: "train/gradients/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/Relu_grad/ReluGrad"
  input: "train/gradients/conv2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/add_grad/Sum"
  input: "train/gradients/conv2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/Relu_grad/ReluGrad"
  input: "train/gradients/conv2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/add_grad/Sum_1"
  input: "train/gradients/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/add_grad/Reshape"
  input: "^train/gradients/conv2/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/add_grad/Reshape"
  input: "^train/gradients/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/add_grad/Reshape_1"
  input: "^train/gradients/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv1/MaxPool"
  input: "conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv2/Conv2D_grad/ShapeN"
  input: "conv2/weights/read"
  input: "train/gradients/conv2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1/MaxPool"
  input: "train/gradients/conv2/Conv2D_grad/ShapeN:1"
  input: "train/gradients/conv2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv1/Relu_1"
  input: "conv1/MaxPool"
  input: "train/gradients/conv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv1/MaxPool_grad/MaxPoolGrad"
  input: "conv1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/Shape"
  op: "Shape"
  input: "conv1/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/add_1_grad/Shape"
  input: "train/gradients/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/Relu_1_grad/ReluGrad"
  input: "train/gradients/conv1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/add_1_grad/Sum"
  input: "train/gradients/conv1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/Relu_1_grad/ReluGrad"
  input: "train/gradients/conv1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/add_1_grad/Sum_1"
  input: "train/gradients/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/add_1_grad/Reshape"
  input: "^train/gradients/conv1/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/add_1_grad/Reshape"
  input: "^train/gradients/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/add_1_grad/Reshape_1"
  input: "^train/gradients/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "conv1/Relu"
  input: "conv1/weights_2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv1/Conv2D_1_grad/ShapeN"
  input: "conv1/weights_2/read"
  input: "train/gradients/conv1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1/Relu"
  input: "train/gradients/conv1/Conv2D_1_grad/ShapeN:1"
  input: "train/gradients/conv1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv1/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv1/Conv2D_1_grad/tuple/control_dependency"
  input: "conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/Shape"
  op: "Shape"
  input: "conv1/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 66
      }
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/add_grad/Shape"
  input: "train/gradients/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/Relu_grad/ReluGrad"
  input: "train/gradients/conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/add_grad/Sum"
  input: "train/gradients/conv1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/Relu_grad/ReluGrad"
  input: "train/gradients/conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/add_grad/Sum_1"
  input: "train/gradients/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/add_grad/Reshape"
  input: "^train/gradients/conv1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/add_grad/Reshape"
  input: "^train/gradients/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/add_grad/Reshape_1"
  input: "^train/gradients/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv1/Conv2D_grad/ShapeN"
  input: "conv1/weights/read"
  input: "train/gradients/conv1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "train/gradients/conv1/Conv2D_grad/ShapeN:1"
  input: "train/gradients/conv1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 66
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 66
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam/Assign"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam/read"
  op: "Identity"
  input: "conv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 66
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 66
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "conv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam_1/read"
  op: "Identity"
  input: "conv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 66
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 66
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases/Adam/Assign"
  op: "Assign"
  input: "conv1/biases/Adam"
  input: "conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases/Adam/read"
  op: "Identity"
  input: "conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 66
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 66
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv1/biases/Adam_1"
  input: "conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases/Adam_1/read"
  op: "Identity"
  input: "conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/weights_2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000B\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights_2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights_2/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights_2/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights_2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 66
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights_2/Adam/Assign"
  op: "Assign"
  input: "conv1/weights_2/Adam"
  input: "conv1/weights_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights_2/Adam/read"
  op: "Identity"
  input: "conv1/weights_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
}
node {
  name: "conv1/weights_2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000B\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights_2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights_2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights_2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights_2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 66
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights_2/Adam_1/Assign"
  op: "Assign"
  input: "conv1/weights_2/Adam_1"
  input: "conv1/weights_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights_2/Adam_1/read"
  op: "Identity"
  input: "conv1/weights_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
}
node {
  name: "conv1/biases_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/biases_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases_2/Adam/Assign"
  op: "Assign"
  input: "conv1/biases_2/Adam"
  input: "conv1/biases_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases_2/Adam/read"
  op: "Identity"
  input: "conv1/biases_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
}
node {
  name: "conv1/biases_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/biases_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases_2/Adam_1/Assign"
  op: "Assign"
  input: "conv1/biases_2/Adam_1"
  input: "conv1/biases_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases_2/Adam_1/read"
  op: "Identity"
  input: "conv1/biases_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\202\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 130
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam/Assign"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam/read"
  op: "Identity"
  input: "conv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\202\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 130
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "conv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam_1/read"
  op: "Identity"
  input: "conv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 130
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 130
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases/Adam/Assign"
  op: "Assign"
  input: "conv2/biases/Adam"
  input: "conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases/Adam/read"
  op: "Identity"
  input: "conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
}
node {
  name: "conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 130
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 130
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv2/biases/Adam_1"
  input: "conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases/Adam_1/read"
  op: "Identity"
  input: "conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
}
node {
  name: "conv2/weights_2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\202\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights_2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights_2/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights_2/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights_2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 130
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights_2/Adam/Assign"
  op: "Assign"
  input: "conv2/weights_2/Adam"
  input: "conv2/weights_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights_2/Adam/read"
  op: "Identity"
  input: "conv2/weights_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
}
node {
  name: "conv2/weights_2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\202\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights_2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights_2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights_2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights_2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 130
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights_2/Adam_1/Assign"
  op: "Assign"
  input: "conv2/weights_2/Adam_1"
  input: "conv2/weights_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights_2/Adam_1/read"
  op: "Identity"
  input: "conv2/weights_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
}
node {
  name: "conv2/biases_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/biases_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases_2/Adam/Assign"
  op: "Assign"
  input: "conv2/biases_2/Adam"
  input: "conv2/biases_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases_2/Adam/read"
  op: "Identity"
  input: "conv2/biases_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
}
node {
  name: "conv2/biases_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/biases_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases_2/Adam_1/Assign"
  op: "Assign"
  input: "conv2/biases_2/Adam_1"
  input: "conv2/biases_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases_2/Adam_1/read"
  op: "Identity"
  input: "conv2/biases_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\002\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 258
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights/Adam/Assign"
  op: "Assign"
  input: "conv3/weights/Adam"
  input: "conv3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights/Adam/read"
  op: "Identity"
  input: "conv3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\002\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 258
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv3/weights/Adam_1"
  input: "conv3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights/Adam_1/read"
  op: "Identity"
  input: "conv3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 258
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 258
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/biases/Adam/Assign"
  op: "Assign"
  input: "conv3/biases/Adam"
  input: "conv3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/biases/Adam/read"
  op: "Identity"
  input: "conv3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
}
node {
  name: "conv3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 258
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 258
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv3/biases/Adam_1"
  input: "conv3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/biases/Adam_1/read"
  op: "Identity"
  input: "conv3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
}
node {
  name: "conv3/weights_2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights_2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/weights_2/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv3/weights_2/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv3/weights_2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/weights_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 258
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights_2/Adam/Assign"
  op: "Assign"
  input: "conv3/weights_2/Adam"
  input: "conv3/weights_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights_2/Adam/read"
  op: "Identity"
  input: "conv3/weights_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
}
node {
  name: "conv3/weights_2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights_2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/weights_2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv3/weights_2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv3/weights_2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/weights_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 258
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights_2/Adam_1/Assign"
  op: "Assign"
  input: "conv3/weights_2/Adam_1"
  input: "conv3/weights_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights_2/Adam_1/read"
  op: "Identity"
  input: "conv3/weights_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
}
node {
  name: "conv3/biases_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/biases_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/biases_2/Adam/Assign"
  op: "Assign"
  input: "conv3/biases_2/Adam"
  input: "conv3/biases_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/biases_2/Adam/read"
  op: "Identity"
  input: "conv3/biases_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
}
node {
  name: "conv3/biases_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/biases_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/biases_2/Adam_1/Assign"
  op: "Assign"
  input: "conv3/biases_2/Adam_1"
  input: "conv3/biases_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/biases_2/Adam_1/read"
  op: "Identity"
  input: "conv3/biases_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
}
node {
  name: "fcl1/Weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000Q\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fcl1/Weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl1/Weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "fcl1/Weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "fcl1/Weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl1/Weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20736
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl1/Weights/Adam/Assign"
  op: "Assign"
  input: "fcl1/Weights/Adam"
  input: "fcl1/Weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl1/Weights/Adam/read"
  op: "Identity"
  input: "fcl1/Weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
}
node {
  name: "fcl1/Weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000Q\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fcl1/Weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl1/Weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fcl1/Weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fcl1/Weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl1/Weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20736
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl1/Weights/Adam_1/Assign"
  op: "Assign"
  input: "fcl1/Weights/Adam_1"
  input: "fcl1/Weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl1/Weights/Adam_1/read"
  op: "Identity"
  input: "fcl1/Weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
}
node {
  name: "fcl1/Biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl1/Biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl1/Biases/Adam/Assign"
  op: "Assign"
  input: "fcl1/Biases/Adam"
  input: "fcl1/Biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl1/Biases/Adam/read"
  op: "Identity"
  input: "fcl1/Biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
}
node {
  name: "fcl1/Biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl1/Biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl1/Biases/Adam_1/Assign"
  op: "Assign"
  input: "fcl1/Biases/Adam_1"
  input: "fcl1/Biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl1/Biases/Adam_1/read"
  op: "Identity"
  input: "fcl1/Biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
}
node {
  name: "fcl2/Weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "fcl2/Weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl2/Weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "fcl2/Weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "fcl2/Weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl2/Weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl2/Weights/Adam/Assign"
  op: "Assign"
  input: "fcl2/Weights/Adam"
  input: "fcl2/Weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl2/Weights/Adam/read"
  op: "Identity"
  input: "fcl2/Weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
}
node {
  name: "fcl2/Weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "fcl2/Weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl2/Weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fcl2/Weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fcl2/Weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcl2/Weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl2/Weights/Adam_1/Assign"
  op: "Assign"
  input: "fcl2/Weights/Adam_1"
  input: "fcl2/Weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl2/Weights/Adam_1/read"
  op: "Identity"
  input: "fcl2/Weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
}
node {
  name: "fcl2/Biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl2/Biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl2/Biases/Adam/Assign"
  op: "Assign"
  input: "fcl2/Biases/Adam"
  input: "fcl2/Biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl2/Biases/Adam/read"
  op: "Identity"
  input: "fcl2/Biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
}
node {
  name: "fcl2/Biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcl2/Biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcl2/Biases/Adam_1/Assign"
  op: "Assign"
  input: "fcl2/Biases/Adam_1"
  input: "fcl2/Biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcl2/Biases/Adam_1/read"
  op: "Identity"
  input: "fcl2/Biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
}
node {
  name: "train/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_conv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/biases"
  input: "conv1/biases/Adam"
  input: "conv1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv1/weights_2/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/weights_2"
  input: "conv1/weights_2/Adam"
  input: "conv1/weights_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv1/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv1/biases_2/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/biases_2"
  input: "conv1/biases_2/Adam"
  input: "conv1/biases_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/biases"
  input: "conv2/biases/Adam"
  input: "conv2/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/weights_2/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/weights_2"
  input: "conv2/weights_2/Adam"
  input: "conv2/weights_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv2/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/biases_2/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/biases_2"
  input: "conv2/biases_2/Adam"
  input: "conv2/biases_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv2/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/weights"
  input: "conv3/weights/Adam"
  input: "conv3/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/biases"
  input: "conv3/biases/Adam"
  input: "conv3/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/weights_2/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/weights_2"
  input: "conv3/weights_2/Adam"
  input: "conv3/weights_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv3/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/biases_2/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/biases_2"
  input: "conv3/biases_2/Adam"
  input: "conv3/biases_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv3/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fcl1/Weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fcl1/Weights"
  input: "fcl1/Weights/Adam"
  input: "fcl1/Weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/fcl1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fcl1/Biases/ApplyAdam"
  op: "ApplyAdam"
  input: "fcl1/Biases"
  input: "fcl1/Biases/Adam"
  input: "fcl1/Biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/fcl1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fcl2/Weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fcl2/Weights"
  input: "fcl2/Weights/Adam"
  input: "fcl2/Weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/fcl2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fcl2/Biases/ApplyAdam"
  op: "ApplyAdam"
  input: "fcl2/Biases"
  input: "fcl2/Biases/Adam"
  input: "fcl2/Biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/fcl2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_conv1/biases/ApplyAdam"
  input: "^train/Adam/update_conv1/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv1/weights/ApplyAdam"
  input: "^train/Adam/update_conv1/weights_2/ApplyAdam"
  input: "^train/Adam/update_conv2/biases/ApplyAdam"
  input: "^train/Adam/update_conv2/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv2/weights/ApplyAdam"
  input: "^train/Adam/update_conv2/weights_2/ApplyAdam"
  input: "^train/Adam/update_conv3/biases/ApplyAdam"
  input: "^train/Adam/update_conv3/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv3/weights/ApplyAdam"
  input: "^train/Adam/update_conv3/weights_2/ApplyAdam"
  input: "^train/Adam/update_fcl1/Biases/ApplyAdam"
  input: "^train/Adam/update_fcl1/Weights/ApplyAdam"
  input: "^train/Adam/update_fcl2/Biases/ApplyAdam"
  input: "^train/Adam/update_fcl2/Weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_conv1/biases/ApplyAdam"
  input: "^train/Adam/update_conv1/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv1/weights/ApplyAdam"
  input: "^train/Adam/update_conv1/weights_2/ApplyAdam"
  input: "^train/Adam/update_conv2/biases/ApplyAdam"
  input: "^train/Adam/update_conv2/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv2/weights/ApplyAdam"
  input: "^train/Adam/update_conv2/weights_2/ApplyAdam"
  input: "^train/Adam/update_conv3/biases/ApplyAdam"
  input: "^train/Adam/update_conv3/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv3/weights/ApplyAdam"
  input: "^train/Adam/update_conv3/weights_2/ApplyAdam"
  input: "^train/Adam/update_fcl1/Biases/ApplyAdam"
  input: "^train/Adam/update_fcl1/Weights/ApplyAdam"
  input: "^train/Adam/update_fcl2/Biases/ApplyAdam"
  input: "^train/Adam/update_fcl2/Weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
  input: "^train/Adam/update_conv1/biases/ApplyAdam"
  input: "^train/Adam/update_conv1/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv1/weights/ApplyAdam"
  input: "^train/Adam/update_conv1/weights_2/ApplyAdam"
  input: "^train/Adam/update_conv2/biases/ApplyAdam"
  input: "^train/Adam/update_conv2/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv2/weights/ApplyAdam"
  input: "^train/Adam/update_conv2/weights_2/ApplyAdam"
  input: "^train/Adam/update_conv3/biases/ApplyAdam"
  input: "^train/Adam/update_conv3/biases_2/ApplyAdam"
  input: "^train/Adam/update_conv3/weights/ApplyAdam"
  input: "^train/Adam/update_conv3/weights_2/ApplyAdam"
  input: "^train/Adam/update_fcl1/Biases/ApplyAdam"
  input: "^train/Adam/update_fcl1/Weights/ApplyAdam"
  input: "^train/Adam/update_fcl2/Biases/ApplyAdam"
  input: "^train/Adam/update_fcl2/Weights/ApplyAdam"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input"
  input: "conv1/weights_1"
  input: "conv1/biases_1"
  input: "conv1/activations"
  input: "conv1/weights2"
  input: "conv1/biases2"
  input: "conv1/activations2"
  input: "conv2/weights_1"
  input: "conv2/biases_1"
  input: "conv2/activations"
  input: "conv2/weights2"
  input: "conv2/biases2"
  input: "conv2/activations2"
  input: "conv3/weights_1"
  input: "conv3/biases_1"
  input: "conv3/activations"
  input: "conv3/weights2"
  input: "conv3/biases2"
  input: "conv3/activations2"
  input: "fcl1/weights_1"
  input: "fcl1/biases_1"
  input: "fcl1/activations"
  input: "fcl1/dropout_1"
  input: "fcl2/weights_1"
  input: "fcl2/biases_1"
  input: "fcl2/activations"
  input: "fcl2/dropout_1"
  input: "loss/mse"
  attr {
    key: "N"
    value {
      i: 28
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: "conv1/biases"
        string_val: "conv1/biases/Adam"
        string_val: "conv1/biases/Adam_1"
        string_val: "conv1/biases_2"
        string_val: "conv1/biases_2/Adam"
        string_val: "conv1/biases_2/Adam_1"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv1/weights_2"
        string_val: "conv1/weights_2/Adam"
        string_val: "conv1/weights_2/Adam_1"
        string_val: "conv2/biases"
        string_val: "conv2/biases/Adam"
        string_val: "conv2/biases/Adam_1"
        string_val: "conv2/biases_2"
        string_val: "conv2/biases_2/Adam"
        string_val: "conv2/biases_2/Adam_1"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "conv2/weights_2"
        string_val: "conv2/weights_2/Adam"
        string_val: "conv2/weights_2/Adam_1"
        string_val: "conv3/biases"
        string_val: "conv3/biases/Adam"
        string_val: "conv3/biases/Adam_1"
        string_val: "conv3/biases_2"
        string_val: "conv3/biases_2/Adam"
        string_val: "conv3/biases_2/Adam_1"
        string_val: "conv3/weights"
        string_val: "conv3/weights/Adam"
        string_val: "conv3/weights/Adam_1"
        string_val: "conv3/weights_2"
        string_val: "conv3/weights_2/Adam"
        string_val: "conv3/weights_2/Adam_1"
        string_val: "fcl1/Biases"
        string_val: "fcl1/Biases/Adam"
        string_val: "fcl1/Biases/Adam_1"
        string_val: "fcl1/Weights"
        string_val: "fcl1/Weights/Adam"
        string_val: "fcl1/Weights/Adam_1"
        string_val: "fcl2/Biases"
        string_val: "fcl2/Biases/Adam"
        string_val: "fcl2/Biases/Adam_1"
        string_val: "fcl2/Weights"
        string_val: "fcl2/Weights/Adam"
        string_val: "fcl2/Weights/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv1/biases"
  input: "conv1/biases/Adam"
  input: "conv1/biases/Adam_1"
  input: "conv1/biases_2"
  input: "conv1/biases_2/Adam"
  input: "conv1/biases_2/Adam_1"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "conv1/weights_2"
  input: "conv1/weights_2/Adam"
  input: "conv1/weights_2/Adam_1"
  input: "conv2/biases"
  input: "conv2/biases/Adam"
  input: "conv2/biases/Adam_1"
  input: "conv2/biases_2"
  input: "conv2/biases_2/Adam"
  input: "conv2/biases_2/Adam_1"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "conv2/weights_2"
  input: "conv2/weights_2/Adam"
  input: "conv2/weights_2/Adam_1"
  input: "conv3/biases"
  input: "conv3/biases/Adam"
  input: "conv3/biases/Adam_1"
  input: "conv3/biases_2"
  input: "conv3/biases_2/Adam"
  input: "conv3/biases_2/Adam_1"
  input: "conv3/weights"
  input: "conv3/weights/Adam"
  input: "conv3/weights/Adam_1"
  input: "conv3/weights_2"
  input: "conv3/weights_2/Adam"
  input: "conv3/weights_2/Adam_1"
  input: "fcl1/Biases"
  input: "fcl1/Biases/Adam"
  input: "fcl1/Biases/Adam_1"
  input: "fcl1/Weights"
  input: "fcl1/Weights/Adam"
  input: "fcl1/Weights/Adam_1"
  input: "fcl2/Biases"
  input: "fcl2/Biases/Adam"
  input: "fcl2/Biases/Adam_1"
  input: "fcl2/Weights"
  input: "fcl2/Weights/Adam"
  input: "fcl2/Weights/Adam_1"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: "conv1/biases"
        string_val: "conv1/biases/Adam"
        string_val: "conv1/biases/Adam_1"
        string_val: "conv1/biases_2"
        string_val: "conv1/biases_2/Adam"
        string_val: "conv1/biases_2/Adam_1"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv1/weights_2"
        string_val: "conv1/weights_2/Adam"
        string_val: "conv1/weights_2/Adam_1"
        string_val: "conv2/biases"
        string_val: "conv2/biases/Adam"
        string_val: "conv2/biases/Adam_1"
        string_val: "conv2/biases_2"
        string_val: "conv2/biases_2/Adam"
        string_val: "conv2/biases_2/Adam_1"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "conv2/weights_2"
        string_val: "conv2/weights_2/Adam"
        string_val: "conv2/weights_2/Adam_1"
        string_val: "conv3/biases"
        string_val: "conv3/biases/Adam"
        string_val: "conv3/biases/Adam_1"
        string_val: "conv3/biases_2"
        string_val: "conv3/biases_2/Adam"
        string_val: "conv3/biases_2/Adam_1"
        string_val: "conv3/weights"
        string_val: "conv3/weights/Adam"
        string_val: "conv3/weights/Adam_1"
        string_val: "conv3/weights_2"
        string_val: "conv3/weights_2/Adam"
        string_val: "conv3/weights_2/Adam_1"
        string_val: "fcl1/Biases"
        string_val: "fcl1/Biases/Adam"
        string_val: "fcl1/Biases/Adam_1"
        string_val: "fcl1/Weights"
        string_val: "fcl1/Weights/Adam"
        string_val: "fcl1/Weights/Adam_1"
        string_val: "fcl2/Biases"
        string_val: "fcl2/Biases/Adam"
        string_val: "fcl2/Biases/Adam_1"
        string_val: "fcl2/Weights"
        string_val: "fcl2/Weights/Adam"
        string_val: "fcl2/Weights/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "conv1/biases"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "conv1/biases/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1/biases/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1/biases_2"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1/biases_2/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/biases_2/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1/weights"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1/weights_2"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv1/weights_2/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv1/weights_2/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2/biases"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2/biases/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2/biases/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2/biases_2"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv2/biases_2/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv2/biases_2/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv2/weights"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv2/weights_2"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv2/weights_2/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv2/weights_2/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "conv3/biases"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "conv3/biases/Adam"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "conv3/biases/Adam_1"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "conv3/biases_2"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "conv3/biases_2/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "conv3/biases_2/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/biases_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "conv3/weights"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "conv3/weights/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "conv3/weights/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "conv3/weights_2"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "conv3/weights_2/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "conv3/weights_2/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "fcl1/Biases"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "fcl1/Biases/Adam"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "fcl1/Biases/Adam_1"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "fcl1/Weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "fcl1/Weights/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "fcl1/Weights/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl1/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "fcl2/Biases"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "fcl2/Biases/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "fcl2/Biases/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "fcl2/Weights"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "fcl2/Weights/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "fcl2/Weights/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcl2/Weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv1/biases/Adam/Assign"
  input: "^conv1/biases/Adam_1/Assign"
  input: "^conv1/biases/Assign"
  input: "^conv1/biases_2/Adam/Assign"
  input: "^conv1/biases_2/Adam_1/Assign"
  input: "^conv1/biases_2/Assign"
  input: "^conv1/weights/Adam/Assign"
  input: "^conv1/weights/Adam_1/Assign"
  input: "^conv1/weights/Assign"
  input: "^conv1/weights_2/Adam/Assign"
  input: "^conv1/weights_2/Adam_1/Assign"
  input: "^conv1/weights_2/Assign"
  input: "^conv2/biases/Adam/Assign"
  input: "^conv2/biases/Adam_1/Assign"
  input: "^conv2/biases/Assign"
  input: "^conv2/biases_2/Adam/Assign"
  input: "^conv2/biases_2/Adam_1/Assign"
  input: "^conv2/biases_2/Assign"
  input: "^conv2/weights/Adam/Assign"
  input: "^conv2/weights/Adam_1/Assign"
  input: "^conv2/weights/Assign"
  input: "^conv2/weights_2/Adam/Assign"
  input: "^conv2/weights_2/Adam_1/Assign"
  input: "^conv2/weights_2/Assign"
  input: "^conv3/biases/Adam/Assign"
  input: "^conv3/biases/Adam_1/Assign"
  input: "^conv3/biases/Assign"
  input: "^conv3/biases_2/Adam/Assign"
  input: "^conv3/biases_2/Adam_1/Assign"
  input: "^conv3/biases_2/Assign"
  input: "^conv3/weights/Adam/Assign"
  input: "^conv3/weights/Adam_1/Assign"
  input: "^conv3/weights/Assign"
  input: "^conv3/weights_2/Adam/Assign"
  input: "^conv3/weights_2/Adam_1/Assign"
  input: "^conv3/weights_2/Assign"
  input: "^fcl1/Biases/Adam/Assign"
  input: "^fcl1/Biases/Adam_1/Assign"
  input: "^fcl1/Biases/Assign"
  input: "^fcl1/Weights/Adam/Assign"
  input: "^fcl1/Weights/Adam_1/Assign"
  input: "^fcl1/Weights/Assign"
  input: "^fcl2/Biases/Adam/Assign"
  input: "^fcl2/Biases/Adam_1/Assign"
  input: "^fcl2/Biases/Assign"
  input: "^fcl2/Weights/Adam/Assign"
  input: "^fcl2/Weights/Adam_1/Assign"
  input: "^fcl2/Weights/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
}
versions {
  producer: 27
}
